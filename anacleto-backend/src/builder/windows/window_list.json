{
	"id": "windows_list",
	"component": "GridContainer",
	"title": "Windows",
	"isCard": true,
	"layout": "flex",
	"className": "flex-column flex-auto",
	"items": [
		{
			"id": "windows",
			"store": "windows/list",
			"component": "DataTable",
			"className": "no-padding",
			"toggleable": false,
			"sortable": true,
			"removableSort": true,
			"columns": [
				{
					"field": "window",
					"header": "Window",
					"sortable": true
				}
			],
			"paginator": false,
			"stripedRows": true,
			"tableSize": "large",
			"scrollHeight": "flex",
			"isEditable": false,
			"editMode": "row",
			"dataKey": "id",
			"emptyMessage": "No windows",
			"events": {
				"onSelectionChange": {
					"parameters": "event",
					"body": "if(event.value) {utils.openWindow({window:'/admin/window_detail',searchParams:{window:event.value.window}});}"
				},
				"afterRender": {
					"body": "this.load();"
				},
				"onContextMenu": {
					"parameters": "event",
					"body": "let _this = this;const deleteWindow = (windowName) => {utils.showConfirmDialog({message: 'Do you want to delete this window?',header: 'Delete Confirmation',icon: 'pi pi-info-circle',acceptClassName: 'p-button-danger',accept: function () {utils.callServer({url: '/window',method: 'delete',params: {application: _this.context.destApplication,window: windowName,},}).then(function (response) {if (response.data && response.data.success) {_this.load();utils.showToast({severity: 'success',summary: 'Window delete',detail: JSON.stringify(response.data),life: 3000,});} else {utils.showToast({severity: 'error',summary: 'Error',detail: 'Server error',sticky: true,});}}).catch(function (error) {utils.showToast({severity: 'error',summary: 'Error',detail: 'Server error:' + error,sticky: true,});});},reject: function () {},});};let buttons = [];const selectedRow = event.data;buttons.push({label: 'Delete window',icon: 'pi pi-trash',command: () => {const windowName = selectedRow.window.replace('.json', '');deleteWindow(windowName);},});return buttons;"
				}
			}
		}
	],
	"actions":[
		{
			"id": "new_window",
			"label": "New window",
			"icon": "pi pi-ad",
			"events" : {
				"onClick": {
					"body": "utils.openWindow({window:'new_window',type:'modal',settings:{header:'Nuova finestra'}})"
				}
			}
		}
	]
}
